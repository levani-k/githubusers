{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","onSearchChange","event","setState","searchfield","target","value","viewProfile","userIndex","personProfile","userProfile","state","users","fetch","followers_url","then","response","json","data","followers","following_users","following_url","slice","length","following","starred_url","starred","repos_url","repositories","this","filteredusers","filter","user","login","toLowerCase","includes","className","onClick","alt","src","avatar_url","style","margin","padding","boxSizing","borderRadius","boxShadow","type","placeholder","onChange","map","index","href","html_url","id","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAkHeA,E,kDA9Gb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAhB9B,EAyBdC,YAAc,SAACL,GACb,IAAMM,EAAYN,EAAMG,OAAOC,MAC/B,EAAKH,SAAS,CACZM,eAAe,EACfC,YAAa,EAAKC,MAAMC,MAAMJ,KAGhCK,MAAM,EAAKF,MAAMC,MAAMJ,GAAWM,eACjCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKf,SAAS,CAAEgB,UAAWD,OAEzC,IAAME,EAAkB,EAAKT,MAAMC,MAAMJ,GAAWa,cAAcC,MAAM,EAAG,EAAKX,MAAMC,MAAMJ,GAAWa,cAAcE,OAAS,IAC9HV,MAAMO,GACLL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKf,SAAS,CAAEqB,UAAWN,OAEzC,IAAMO,EAAc,EAAKd,MAAMC,MAAMJ,GAAWiB,YAAYH,MAAM,EAAG,EAAKX,MAAMC,MAAMJ,GAAWiB,YAAYF,OAAS,IACtHV,MAAMY,GACLV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKf,SAAS,CAAEuB,QAASR,OAEvCL,MAAM,EAAKF,MAAMC,MAAMJ,GAAWmB,WACjCZ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKf,SAAS,CAAEyB,aAAcV,QA9C5C,EAAKP,MAAQ,CACXC,MAAO,GACPR,YAAa,GACbK,eAAe,EACfC,YAAa,GACbS,UAAW,GACXK,UAAW,GACXE,QAAS,GACTE,aAAc,IAVJ,E,qDAmBd,WAAqB,IAAD,OAClBf,MAAM,gCACLE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKf,SAAS,CAAES,MAAOM,S,oBA6BvC,WAAU,IAAD,SACuBW,KAAKlB,MAA3BC,EADD,EACCA,MAAOR,EADR,EACQA,YACT0B,EAAgBlB,EAAMmB,QAAO,SAAAC,GACjC,OAAOA,EAAKC,MAAMC,cAAcC,SAAS/B,EAAY8B,kBAEvD,OACE,qBAAKE,UAAU,KAAf,SACIP,KAAKlB,MAAMF,cACX,gCACE,wBAAQ4B,QAAS,kBAAM,EAAKlC,SAAS,CAACM,eAAe,KAArD,qBACA,uBACA,gCACE,qBAAK6B,IAAI,GAAGC,IAAKV,KAAKlB,MAAMD,YAAY8B,aACxC,8BAAIX,KAAKlB,MAAMQ,UAAUI,OAAzB,gBACA,8BAAIM,KAAKlB,MAAMa,UAAUD,OAAzB,gBACA,wCAAMM,KAAKlB,MAAMe,QAAQH,aAE3B,8BACE,8CAAiBM,KAAKlB,MAAMiB,aAAaL,eAI7C,gCACE,8CACA,uBACIkB,MAAO,CAACC,OAAQ,OACVC,QAAS,OACTC,UAAW,gBACXC,aAAc,MACdC,UAAW,kBAEnBV,UAAU,kCACVW,KAAK,SACLC,YAAY,cACZC,SAAUpB,KAAK5B,iBAEnB,uBACA,8BAEI6B,EAAcoB,KAAI,SAAClB,EAAMmB,GACvB,OACE,sBAAmBf,UAAU,iDAA7B,UACE,qBAAKE,IAAI,GAAGC,IAAKP,EAAKQ,aAAc,uBACpC,mBAAGY,KAAMpB,EAAKqB,SAAUhD,OAAO,SAA/B,SAA0C2B,EAAKC,QAC/C,uBACA,wBAAQ3B,MAAO6C,EAAOd,QAAS,EAAK9B,YAApC,4BAJQyB,EAAKsB,kB,GA7FfC,IAAMC,WCSTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.55efe414.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\n\nclass App extends React.Component { \n  constructor() {\n    super()\n    this.state = {\n      users: [],\n      searchfield: '',\n      personProfile: false,\n      userProfile: {},\n      followers: [],\n      following: [],\n      starred: [],\n      repositories: []\n    }\n    \n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value})\n  }\n\n  componentDidMount() {\n    fetch('https://api.github.com/users')\n    .then(response => response.json())\n    .then(data => this.setState({ users: data }))\n  }\n\n  viewProfile = (event) => {\n    const userIndex = event.target.value\n    this.setState({\n      personProfile: true,\n      userProfile: this.state.users[userIndex]\n    })\n\n    fetch(this.state.users[userIndex].followers_url)\n    .then(response => response.json())\n    .then(data => this.setState({ followers: data }))\n\n    const following_users = this.state.users[userIndex].following_url.slice(0, this.state.users[userIndex].following_url.length - 13)\n    fetch(following_users)\n    .then(response => response.json())\n    .then(data => this.setState({ following: data }))\n\n    const starred_url = this.state.users[userIndex].starred_url.slice(0, this.state.users[userIndex].starred_url.length - 15)\n    fetch(starred_url)\n    .then(response => response.json())\n    .then(data => this.setState({ starred: data }))\n\n    fetch(this.state.users[userIndex].repos_url)\n    .then(response => response.json())\n    .then(data => this.setState({ repositories: data }))\n  }\n  \n  render() {\n    const { users, searchfield} = this.state\n    const filteredusers = users.filter(user =>{\n      return user.login.toLowerCase().includes(searchfield.toLowerCase())\n    })\n    return (\n      <div className='tc'>\n        { this.state.personProfile ? \n          <div>\n            <button onClick={() => this.setState({personProfile: false})}>Go Back</button>\n            <br />\n            <div>\n              <img alt='' src={this.state.userProfile.avatar_url} />\n              <p>{this.state.followers.length} followers</p>\n              <p>{this.state.following.length} following</p>\n              <p>âœ© {this.state.starred.length}</p>\n            </div>\n            <div>\n              <p>repositories {this.state.repositories.length}</p>\n            </div>\n          </div>\n          :\n          <div>\n            <h1>Github Users</h1>\n            <input \n                style={{margin: '16px',\n                      padding: '16px',\n                      boxSizing: 'border-radius',\n                      borderRadius: '5px',\n                      boxShadow: '0 2px 5px #000'\n                    }}\n              className='pa3 ba b--green bg-lighest-blue' \n              type='search' \n              placeholder='search user' \n              onChange={this.onSearchChange}\n          />\n          <br />\n          <div>\n            {\n              filteredusers.map((user, index) => {\n                return(\n                  <div key={user.id} className='tc bg-light-green dib br3 pa3 ma2 bw2 shadow-5'>\n                    <img alt='' src={user.avatar_url} /><br />\n                    <a href={user.html_url} target='_blank' >{user.login}</a>\n                    <br />\n                    <button value={index} onClick={this.viewProfile}>view profile</button>\n                  </div>\n                )\n              })\n            }\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}